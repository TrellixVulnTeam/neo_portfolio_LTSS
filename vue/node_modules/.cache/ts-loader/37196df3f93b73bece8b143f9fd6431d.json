{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/ts-loader/index.js??ref--14-2!/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/store/Post/actions.ts","dependencies":[{"path":"/app/src/store/Post/actions.ts","mtime":1607956740953},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1607868701929},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1607868701810},{"path":"/app/node_modules/ts-loader/index.js","mtime":1607868716978},{"path":"/app/node_modules/eslint-loader/index.js","mtime":1607868715874}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CnZhciBhY3Rpb25zID0gewogIGZldGNoUG9zdHM6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfZmV0Y2hQb3N0cyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmLCBwb3N0cykgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChheGlvcy5kZWZhdWx0cy5iYXNlVVJMICsgJ3Bvc3RzJykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICBwb3N0cyA9IHJlcy5kYXRhOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNvbW1pdCgnZmV0Y2hQb3N0cycsIHBvc3RzKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gZmV0Y2hQb3N0cyhfeCwgX3gyKSB7CiAgICAgIHJldHVybiBfZmV0Y2hQb3N0cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBmZXRjaFBvc3RzOwogIH0oKQp9OwpleHBvcnQgZGVmYXVsdCBhY3Rpb25zOw=="},{"version":3,"sources":["/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/store/Post/actions.ts"],"names":[],"mappings":";;AAEA,OAAO,KAAP,MAAkB,OAAlB;AAEA,IAAM,OAAO,GAAsC;AACjD,EAAA,UAAU;AAAA,8EAAE,uBAAmB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAS,cAAA,MAAT,QAAS,MAAT;AAAA;AAAA,qBACJ,KAAK,CACR,GADG,CACC,KAAK,CAAC,QAAN,CAAe,OAAf,GAAyB,OAD1B,EAEH,IAFG,CAEE,UAAA,GAAG,EAAG;AACV,gBAAA,KAAK,GAAG,GAAG,CAAC,IAAZ;AACD,eAJG,CADI;;AAAA;AAMV,cAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;;AANU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADuC,CAAnD;AAWA,eAAe,OAAf","sourcesContent":["import { ActionTree } from 'vuex';\nimport { PostsState, RootState, Post } from '@/store/types';\nimport axios from 'axios';\n\nconst actions: ActionTree<PostsState, RootState> = {\n  fetchPosts: async ({ commit }, posts: Post[]) => {\n    await axios\n      .get(axios.defaults.baseURL + 'posts')\n      .then(res => {\n        posts = res.data;\n      });\n    commit('fetchPosts', posts)\n  }\n};\n\nexport default actions;"],"sourceRoot":""}]}